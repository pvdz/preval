// TOFIX regressions:

// tests/cases/normalize/loops/base_return_cond.md -> used to be able to output a series of completely resolved $() with the second params resolved to numbers
// tests/cases/normalize/nullish/global_nested_assign.md -> used to be able to inline the obj.prop assign and end with `{ b: 15 }` (same tests/cases/normalize/nullish/func_nested_assign.md)
// tests/cases/normalize/dce/throw/fence_at_loop_dowhile.md -> regression?

// TODO:

// tests/cases/normalize/branching/single_branching/_base_nested_else_no_tail.md -> find a way to consolidate?
// tests/cases/normalize/expressions/assignments/for_of_left/auto_ident_logic_and_and.md -> add test that prints a when it does not enter the for-loop body. (this was a fix that used to be broken)
// tests/cases/normalize/expressions/assignments/for_c/auto_ident_logic_||_simple_complex.md -> rename file to eliminate the pipes?
// while unroll transform does a `if (x) yes=1 else yes=0 if (yes) { while ...} else {}`. it should store the while in the if-branch.
// Redundant write: try { $(); } catch (e) { e = 1; $(e); e = 1; $(e); }
// tests/cases/testers/base.md -> consider the while(true) transient and then detect that x is only true once. then we can move one branch outside
// tests/cases/normalize/dce/return/decl_after_looped_infi.md -> when a branch exits the loop we could replace it with a break and move the branch to after the loop? but I guess only if there are no other breaks. maybe too edge casy
// investigate while(true) loops and if there are cases where we could rotate statements in the body, then move one out before/after. the loop is wrap-around after all.
// nested labels can be squashed when they have no tail
